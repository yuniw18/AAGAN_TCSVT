MODE: 1             # 1: train, 2: test, 3: eval
MODEL: 2            # 1: edge model, 2: inpaint model, 3: edge-inpaint model, 4: joint model
MASK: 3             # 1: random block, 2: half, 3: external, 4: (external, random block), 5: (external, random block, half)
EDGE: 1             # 1: canny, 2: external
NMS: 1              # 0: no non-max-suppression, 1: applies non-max-suppression on the external edges by multiplying by Canny
SEED: 10            # random seed
GPU: [0]            # list of gpu ids
DEBUG: 0            # turns on debugging mode
VERBOSE: 0          # turns on verbose mode in the output console


#### Image data file list ####
TRAIN_FLIST: ./datasets/demo.flist
VAL_FLIST:  ./datasets/demo.flist
TEST_FLIST:  ./datasets/demo.flist

########## Edge data file list ###########
TRAIN_EDGE_FLIST: ./datasets/places2_edges_train.flist
VAL_EDGE_FLIST: ./datasets/places2_edges_val.flist
TEST_EDGE_FLIST: ./datasets/places2_edges_test.flist



######## MASK data file list #########
TRAIN_MASK_FLIST: ./datasets/MASK.flist
VAL_MASK_FLIST: ./datasets/MASK.flist
TEST_MASK_FLIST: ./datasets/MASK.flist

################# Set discriminator architecture ##################
# ASPP discriminator -> Set ASPP True, and set others False
# UNET discriminator -> Set UNET True, and set others False
# Auto-encoder discriminator -> Set Auto True, and set others False
# patchGAN discriminator -> Set ASPP & UNET & Auto False

# Use proper architecture according to the loss function 

ASPP: True
Auto: False                    
UNET: False
##################################################################

USE_SPEC: True # Use spectral normalization
USE_percep: False
LR: 0.0001                    # learning rate
D2G_LR: 0.1                   # discriminator/generator learning rate ratio
BETA1: 0.9                    # adam optimizer beta1
BETA2: 0.999                    # adam optimizer beta2
BATCH_SIZE: 16                 # input batch size for training
INPUT_SIZE: 128               # input image size for training / 0 for original size / Set this manually
SIGMA: 2                      # standard deviation of the Gaussian filter used in Canny edge detector (0: random, -1: no edge)
MAX_ITERS: 2100001                 # maximum number of iterations to train the model

EDGE_THRESHOLD: 0.5           # edge detection threshold
L1_LOSS_WEIGHT: 1             # l1 loss weight
FM_LOSS_WEIGHT: 10            # feature-matching loss weight
STYLE_LOSS_WEIGHT: 0        # style loss weight
CONTENT_LOSS_WEIGHT: 0      # perceptual loss weight
INPAINT_ADV_LOSS_WEIGHT: 1  # adversarial loss weight


## proposed -> AAGAN
## rs_proposed -> RAAGAN

GAN_LOSS: rs_proposed             # nsgan | lsgan | hinge | rs_proposed | proposed | UNET | EBGAN | rasgan_aver_lsgan

############ H-parameters for discriminator loss ############
REAL_LOSS_WEIGHT: 1
DISP_WEIGHT: 1
FAKE_LOSS_WEIGHT: 1
DISP_LOSS_WEIGHT: 1
FAKE_REL_LOSS_WEIGHT: 0
###########################################################
GAN_POOL_SIZE: 0              # fake images pool size

SAVE_INTERVAL: 10000           # how many iterations to wait before saving model (0: never)
SAMPLE_INTERVAL: 1000         # how many iterations to wait before sampling (0: never)
SAMPLE_SIZE: 1               # number of images to sample
EVAL_INTERVAL: 0              # how many iterations to wait before model evaluation (0: never)
LOG_INTERVAL: 10              # how many iterations to wait before logging training status (0: never)
